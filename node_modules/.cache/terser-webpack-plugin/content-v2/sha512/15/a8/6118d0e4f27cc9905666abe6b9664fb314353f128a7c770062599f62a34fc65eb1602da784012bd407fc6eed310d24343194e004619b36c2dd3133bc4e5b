{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{387:function(t,s,n){\"use strict\";n.r(s);var a=n(51),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"事件循环-event-loop\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#事件循环-event-loop\"}},[t._v(\"#\")]),t._v(\" 事件循环 （Event Loop）\")]),t._v(\" \"),n(\"blockquote\",[n(\"p\",[t._v(\"JavaScript 代码的执行过程中，除了依靠函数调用栈来搞定函数的执行顺序外，还依靠任务队列(task queue)来搞定另外一些代码的执行。整个执行过程，我们称为事件循环过程。\")])]),t._v(\" \"),n(\"h2\",{attrs:{id:\"js-单线程\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js-单线程\"}},[t._v(\"#\")]),t._v(\" JS 单线程\")]),t._v(\" \"),n(\"p\",[t._v(\"Javascript 是一门单线程语言，单线程的原因与之用途有关（浏览器脚本语言）。\")]),t._v(\" \"),n(\"p\",[t._v(\"单线程能够保证一致性，如果有两个线程，一个线程点击了一个元素，另一个删除了一个元素，浏览器就不知道以哪个为准了。因此 JS 的单线程实际上是指单个脚本只能在一个线程上运行，所有任务需要排队执行，前一个任务结束，才会执行后一个任务。\")]),t._v(\" \"),n(\"h2\",{attrs:{id:\"调用栈\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#调用栈\"}},[t._v(\"#\")]),t._v(\" 调用栈\")]),t._v(\" \"),n(\"p\",[t._v(\"在 JavaScript 运行的时候，主线程会形成一个栈，通常这个栈被称为调用栈 Call Stack，或者执行栈（Execution Context Stack），调用栈，顾名思义是具有 LIFO（后进先出，Last in First Out）的结构。\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"每调用一个函数，解释器就会把该函数的执行上下文添加到调用栈并开始执行\")]),t._v(\" \"),n(\"li\",[t._v(\"正在调用栈中执行的函数，如果还调用了其他函数，那么新函数也会被添加到调用栈，并立即执行\")]),t._v(\" \"),n(\"li\",[t._v(\"当前函数执行完毕后，解释器会将其执行上下文清除调用栈，继续执行剩余执行上下文中的剩余代码\")]),t._v(\" \"),n(\"li\",[t._v(\"但分配的调用栈空间被占满，会引发 “堆栈溢出” 的报错\")])]),t._v(\" \"),n(\"h2\",{attrs:{id:\"任务队列\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#任务队列\"}},[t._v(\"#\")]),t._v(\" 任务队列\")]),t._v(\" \"),n(\"p\",[t._v(\"JavaScript 将所有执行任务分为了同步任务和异步任务。\")]),t._v(\" \"),n(\"p\",[t._v(\"同步任务的执行，按照代码顺序和调用顺序，支持进入调用栈中并执行，执行结束后就移除调用栈。\")]),t._v(\" \"),n(\"p\",[t._v(\"异步任务，首先它依旧会进入调用栈中，然后发起调用，然后解释器会将其响应回调任务放入一个任务队列，紧接着调用栈会将这个任务移除。当主线程清空后，即所有同步任务结束后，解释器会读取任务队列，并依次将已完成的异步任务加入调用栈中并执行。\")]),t._v(\" \"),n(\"p\",[t._v(\"异步任务又分为宏任务（macro-task）与微任务（micro-task），在最新标准中，它们被分别称为 task 与 jobs。\")]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"宏任务\")]),t._v(\" 大概包括：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"script(整体代码)\")]),t._v(\" \"),n(\"li\",[t._v(\"setTimeout\")]),t._v(\" \"),n(\"li\",[t._v(\"setInterval\")]),t._v(\" \"),n(\"li\",[t._v(\"setImmediate\")]),t._v(\" \"),n(\"li\",[t._v(\"I/O\")]),t._v(\" \"),n(\"li\",[t._v(\"UI render\")])]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"微任务\")]),t._v(\" 大概包括:\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"process.nextTick\")]),t._v(\" \"),n(\"li\",[t._v(\"Promise\")]),t._v(\" \"),n(\"li\",[t._v(\"Async/Await(实际就是 promise)\")]),t._v(\" \"),n(\"li\",[t._v(\"MutationObserver(html5 新特性)\")])]),t._v(\" \"),n(\"h2\",{attrs:{id:\"事件循环\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#事件循环\"}},[t._v(\"#\")]),t._v(\" 事件循环\")]),t._v(\" \"),n(\"p\",[t._v(\"事件循环的具体流程如下：\")]),t._v(\" \"),n(\"p\",[t._v(\"主线程 (执行同步代码，异步任务 push 到一个消息队列中) ——> macro-tasks (执行内部所有 micros-tasks) ——> macro-tasks\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"宏任务队列中，按照入队顺序，找到第一个执行的宏任务，放入调用栈，开始执行\")]),t._v(\" \"),n(\"li\",[t._v(\"执行完该宏任务下所有同步任务后，即调用栈清空后，该宏任务被推出宏任务队列，然后微任务队列开始按照入队顺序，依次执行其中的微任务，直至微任务队列清空为止\")]),t._v(\" \"),n(\"li\",[t._v(\"当微任务队列清空后，一个事件循环结束\")]),t._v(\" \"),n(\"li\",[t._v(\"接着从宏任务队列中，找到下一个执行的宏任务，开始第二个事件循环，直至宏任务队列清空为止\")])]),t._v(\" \"),n(\"p\",[t._v(\"这里有几个重点：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"当我们第一次执行的时候，解释器会将整体代码 script 放入宏任务队列中，因此事件循环是从第一个宏任务开始的；\")]),t._v(\" \"),n(\"li\",[t._v(\"如果在执行微任务的过程中，产生新的微任务添加到微任务队列中，也需要一起清空；微任务队列没清空之前，是不会执行下一个宏任务的。（有微则微，无微则宏）\")])]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"举个例子\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[t._v(\"console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'script start'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"async\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"async1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"await\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"async2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'async1 end'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"async\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"async2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'async2 end'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"async1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setTimeout\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'setTimeout'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Promise\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"resolve\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'Promise'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"resolve\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"then\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'promise1'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"then\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'promise2'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\nconsole\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'script end'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// script start => async2 end => Promise => script end => promise1 => promise2 => async1 end => setTimeout\")]),t._v(\"\\n\")])])]),n(\"p\",[t._v(\"分析这段代码：\")]),t._v(\" \"),n(\"ul\",[n(\"li\",[t._v(\"执行代码，输出 script start。\")]),t._v(\" \"),n(\"li\",[t._v(\"执行 async1(),会调用 async2(),然后输出 async2 end,此时将会保留 async1 函数的上下文，然后跳出 async1 函数。\")]),t._v(\" \"),n(\"li\",[t._v(\"遇到 setTimeout，产生一个宏任务\")]),t._v(\" \"),n(\"li\",[t._v(\"执行 Promise，输出 Promise。遇到 then，产生第一个微任务\")]),t._v(\" \"),n(\"li\",[t._v(\"继续执行代码，输出 script end\")]),t._v(\" \"),n(\"li\",[t._v(\"代码逻辑执行完毕(当前宏任务执行完毕)，开始执行当前宏任务产生的微任务队列，输出 promise1，该微任务遇到 then，产生一个新的微任务\")]),t._v(\" \"),n(\"li\",[t._v(\"执行产生的微任务，输出 promise2,当前微任务队列执行完毕。执行权回到 async1\")]),t._v(\" \"),n(\"li\",[t._v(\"执行 await,实际上会产生一个 promise 返回，即\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" promise_ \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Promise\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"resolve\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"reject\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"resolve\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[t._v(\"执行完成，执行 await 后面的语句，输出 async1 end\")]),t._v(\" \"),n(\"li\",[t._v(\"最后，执行下一个宏任务，即执行 setTimeout，输出 setTimeout\")])]),t._v(\" \"),n(\"h2\",{attrs:{id:\"reference\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#reference\"}},[t._v(\"#\")]),t._v(\" Reference\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[n(\"a\",{attrs:{href:\"https://mp.weixin.qq.com/s/G2L_9kj8ST0_HPG7yxd2lw\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"说说 JS 的事件循环机制\"),n(\"OutboundLink\")],1)]),t._v(\" \"),n(\"li\",[n(\"a\",{attrs:{href:\"https://mp.weixin.qq.com/s/a_vfNw0rI2bZHG9xY_7z1Q\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"十几张生动形象的 GIF 图带你彻底掌握 EventLoop\"),n(\"OutboundLink\")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}